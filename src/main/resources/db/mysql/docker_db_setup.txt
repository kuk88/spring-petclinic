$ cd /src/main/resources/db/mysql/
$ docker build -t pet-mysql-server:0.9-8.0.35 .

$ docker run -d --name=pet-mysql-server --publish 3313:3306 `
 pet-mysql-server:0.8-8.0.35 --lower-case-table-names=1

$ docker inspect -f '{{range.NetworkSettings.Networks}}{{.IPAddress}}{{end}}' pet-mysql-server
==================================
# BACKUP MYSQL
==================================
$ cd /src/main/resources/db/mysql/percona
$ docker build -t kuk-percona:2.0 .

$ docker run -it --name percona-xtrabackup-x `
--volumes-from pet-mysql-server `
--env host=172.17.0.2 --env user=root --env password=develop --env backup_file_name=backupNoC.xbstream `
kuk-percona:2.0

# look for `/backup` volume, the `backupNoC.xbstream` file will be there
# i.e.: \\wsl.localhost\docker-desktop-data\data\docker\volumes\e2af1ef463f4a01920faabb08a820337e7e9ed2b4ee1ea8f3c1c8c9644231a60\_data
$ docker inspect -f "{{json .Mounts}}" percona-xtrabackup-x

==================================
# EXTRACT MYSQL BACKUP
==================================
$ cd /src/main/resources/db/mysql/percona-restore
$ docker build -t kuk-percona-restore:0.1 .
$ docker run -it --name percona-xtrabackup-extract `
--volumes-from pet-mysql-server `
--volumes-from percona-xtrabackup-x `
--env backup_file_name=backupNoC.xbstream `
kuk-percona-restore:0.1



=================
# Percona commands
===================
# preforms backup with compression of the stream
$ xtrabackup --backup --host 172.17.0.2 --user=root --password=develop --datadir=/var/lib/mysql/ --stream=xbstream --compress --target-dir=/tmp  > /backup/backupXC.xbstream

# unpack compressed archive
$ xbstream -x --decompress --directory=/restore < /backup/backupXC.xbstream

# preforms backup without compression of the stream(even so it is archived)
$ xtrabackup --backup --host 172.17.0.2 --user=root --password=develop --datadir=/var/lib/mysql/ --stream=xbstream --target-dir=/tmp  > /backup/backupNoC.xbstream

# unpack uncompressed archive
$ xbstream -x --directory=/restore < /backup/backupNoC.xbstream

